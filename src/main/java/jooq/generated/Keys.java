/**
 * This class is generated by jOOQ
 */
package jooq.generated;


import javax.annotation.Generated;

import jooq.generated.tables.Player;
import jooq.generated.tables.Tweet;
import jooq.generated.tables.records.PlayerRecord;
import jooq.generated.tables.records.TweetRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<PlayerRecord, Integer> IDENTITY_PLAYER = Identities0.IDENTITY_PLAYER;
	public static final Identity<TweetRecord, Integer> IDENTITY_TWEET = Identities0.IDENTITY_TWEET;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<PlayerRecord> PLAYER_PLAYER_ID_PK = UniqueKeys0.PLAYER_PLAYER_ID_PK;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<TweetRecord, PlayerRecord> TWEET__TWEET_PLAYER_PLAYER_ID_FK = ForeignKeys0.TWEET__TWEET_PLAYER_PLAYER_ID_FK;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<PlayerRecord, Integer> IDENTITY_PLAYER = createIdentity(Player.PLAYER, Player.PLAYER.PLAYER_ID);
		public static Identity<TweetRecord, Integer> IDENTITY_TWEET = createIdentity(Tweet.TWEET, Tweet.TWEET.TWEET_ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<PlayerRecord> PLAYER_PLAYER_ID_PK = createUniqueKey(Player.PLAYER, Player.PLAYER.PLAYER_ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<TweetRecord, PlayerRecord> TWEET__TWEET_PLAYER_PLAYER_ID_FK = createForeignKey(jooq.generated.Keys.PLAYER_PLAYER_ID_PK, Tweet.TWEET, Tweet.TWEET.PLAYER_ID);
	}
}
