/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.JobRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Job extends TableImpl<JobRecord> {

	private static final long serialVersionUID = 294914822;

	/**
	 * The reference instance of <code>public.job</code>
	 */
	public static final Job JOB = new Job();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<JobRecord> getRecordType() {
		return JobRecord.class;
	}

	/**
	 * The column <code>public.job.job_id</code>.
	 */
	public final TableField<JobRecord, Long> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.job.title</code>.
	 */
	public final TableField<JobRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.description</code>.
	 */
	public final TableField<JobRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.created_timestamp</code>.
	 */
	public final TableField<JobRecord, Timestamp> CREATED_TIMESTAMP = createField("created_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.job.type</code>.
	 */
	public final TableField<JobRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.status</code>.
	 */
	public final TableField<JobRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.total_openings</code>.
	 */
	public final TableField<JobRecord, Integer> TOTAL_OPENINGS = createField("total_openings", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.job.job_mine_id</code>.
	 */
	public final TableField<JobRecord, Integer> JOB_MINE_ID = createField("job_mine_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.job.company_id</code>.
	 */
	public final TableField<JobRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.job.location_id</code>.
	 */
	public final TableField<JobRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.job</code> table reference
	 */
	public Job() {
		this("job", null);
	}

	/**
	 * Create an aliased <code>public.job</code> table reference
	 */
	public Job(String alias) {
		this(alias, JOB);
	}

	private Job(String alias, Table<JobRecord> aliased) {
		this(alias, aliased, null);
	}

	private Job(String alias, Table<JobRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<JobRecord, Long> getIdentity() {
		return Keys.IDENTITY_JOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<JobRecord> getPrimaryKey() {
		return Keys.JOB_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<JobRecord>> getKeys() {
		return Arrays.<UniqueKey<JobRecord>>asList(Keys.JOB_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<JobRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<JobRecord, ?>>asList(Keys.JOB__JOB_JOB_MINE_JOB_MINE_ID_FK, Keys.JOB__JOB_COMPANY_COMPANY_ID_FK, Keys.JOB__JOB_LOCATION_LOCATION_ID_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Job as(String alias) {
		return new Job(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Job rename(String name) {
		return new Job(name, null);
	}
}
