/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.PlayerPitchingStatlineRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerPitchingStatline extends TableImpl<PlayerPitchingStatlineRecord> {

	private static final long serialVersionUID = 1471943029;

	/**
	 * The reference instance of <code>public.player_pitching_statline</code>
	 */
	public static final PlayerPitchingStatline PLAYER_PITCHING_STATLINE = new PlayerPitchingStatline();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PlayerPitchingStatlineRecord> getRecordType() {
		return PlayerPitchingStatlineRecord.class;
	}

	/**
	 * The column <code>public.player_pitching_statline.pitching_statline_id</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> PITCHING_STATLINE_ID = createField("pitching_statline_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.player_pitching_statline.year</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.player_pitching_statline.team_id</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.wins</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> WINS = createField("wins", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.losses</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> LOSSES = createField("losses", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.era</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> ERA = createField("era", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.games</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> GAMES = createField("games", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.games_started</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> GAMES_STARTED = createField("games_started", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.complete_games</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> COMPLETE_GAMES = createField("complete_games", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.shutouts</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> SHUTOUTS = createField("shutouts", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.saves</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> SAVES = createField("saves", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.save_opps</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> SAVE_OPPS = createField("save_opps", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.innings</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> INNINGS = createField("innings", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.hits</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> HITS = createField("hits", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.runs</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> RUNS = createField("runs", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.earned_runs</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> EARNED_RUNS = createField("earned_runs", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.home_runs</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> HOME_RUNS = createField("home_runs", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.hit_batsmen</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> HIT_BATSMEN = createField("hit_batsmen", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.walks</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> WALKS = createField("walks", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.intentional_walks</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> INTENTIONAL_WALKS = createField("intentional_walks", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.strike_outs</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> STRIKE_OUTS = createField("strike_outs", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.average</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> AVERAGE = createField("average", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.whip</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> WHIP = createField("whip", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.player_id</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.bb9</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> BB9 = createField("bb9", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.babip</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> BABIP = createField("babip", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.hr9</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> HR9 = createField("hr9", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.gidp_opp</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Integer> GIDP_OPP = createField("gidp_opp", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.player_pitching_statline.obp</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> OBP = createField("obp", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.ops</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> OPS = createField("ops", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.player_pitching_statline.slg</code>.
	 */
	public final TableField<PlayerPitchingStatlineRecord, Double> SLG = createField("slg", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * Create a <code>public.player_pitching_statline</code> table reference
	 */
	public PlayerPitchingStatline() {
		this("player_pitching_statline", null);
	}

	/**
	 * Create an aliased <code>public.player_pitching_statline</code> table reference
	 */
	public PlayerPitchingStatline(String alias) {
		this(alias, PLAYER_PITCHING_STATLINE);
	}

	private PlayerPitchingStatline(String alias, Table<PlayerPitchingStatlineRecord> aliased) {
		this(alias, aliased, null);
	}

	private PlayerPitchingStatline(String alias, Table<PlayerPitchingStatlineRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PlayerPitchingStatlineRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PLAYER_PITCHING_STATLINE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PlayerPitchingStatlineRecord> getPrimaryKey() {
		return Keys.PLAYER_PITCHING_STATLINE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PlayerPitchingStatlineRecord>> getKeys() {
		return Arrays.<UniqueKey<PlayerPitchingStatlineRecord>>asList(Keys.PLAYER_PITCHING_STATLINE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerPitchingStatline as(String alias) {
		return new PlayerPitchingStatline(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PlayerPitchingStatline rename(String name) {
		return new PlayerPitchingStatline(name, null);
	}
}
