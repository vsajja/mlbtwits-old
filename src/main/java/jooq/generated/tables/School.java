/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.SchoolRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class School extends TableImpl<SchoolRecord> {

	private static final long serialVersionUID = -182315920;

	/**
	 * The reference instance of <code>public.school</code>
	 */
	public static final School SCHOOL = new School();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SchoolRecord> getRecordType() {
		return SchoolRecord.class;
	}

	/**
	 * The column <code>public.school.school_id</code>.
	 */
	public final TableField<SchoolRecord, Long> SCHOOL_ID = createField("school_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.school.name</code>.
	 */
	public final TableField<SchoolRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.school.type</code>.
	 */
	public final TableField<SchoolRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.school.total_students</code>.
	 */
	public final TableField<SchoolRecord, Integer> TOTAL_STUDENTS = createField("total_students", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.school.established_date</code>.
	 */
	public final TableField<SchoolRecord, Date> ESTABLISHED_DATE = createField("established_date", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>public.school.description</code>.
	 */
	public final TableField<SchoolRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.school.location_id</code>.
	 */
	public final TableField<SchoolRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.school.image_id</code>.
	 */
	public final TableField<SchoolRecord, Integer> IMAGE_ID = createField("image_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.school</code> table reference
	 */
	public School() {
		this("school", null);
	}

	/**
	 * Create an aliased <code>public.school</code> table reference
	 */
	public School(String alias) {
		this(alias, SCHOOL);
	}

	private School(String alias, Table<SchoolRecord> aliased) {
		this(alias, aliased, null);
	}

	private School(String alias, Table<SchoolRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SchoolRecord, Long> getIdentity() {
		return Keys.IDENTITY_SCHOOL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SchoolRecord> getPrimaryKey() {
		return Keys.SCHOOL_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SchoolRecord>> getKeys() {
		return Arrays.<UniqueKey<SchoolRecord>>asList(Keys.SCHOOL_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SchoolRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SchoolRecord, ?>>asList(Keys.SCHOOL__SCHOOL_LOCATION_LOCATION_ID_FK, Keys.SCHOOL__SCHOOL_IMAGE_IMAGE_ID_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public School as(String alias) {
		return new School(alias, this);
	}

	/**
	 * Rename this table
	 */
	public School rename(String name) {
		return new School(name, null);
	}
}
