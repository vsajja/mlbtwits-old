/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;


import javax.annotation.Generated;

import jooq.generated.tables.Location;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationRecord extends UpdatableRecordImpl<LocationRecord> implements Record5<Long, String, String, String, String> {

	private static final long serialVersionUID = -1705421224;

	/**
	 * Setter for <code>public.location.location_id</code>.
	 */
	public LocationRecord setLocationId(Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.location.location_id</code>.
	 */
	public Long getLocationId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>public.location.city</code>.
	 */
	public LocationRecord setCity(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.location.city</code>.
	 */
	public String getCity() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.location.state_or_province</code>.
	 */
	public LocationRecord setStateOrProvince(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.location.state_or_province</code>.
	 */
	public String getStateOrProvince() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.location.zip_or_postalcode</code>.
	 */
	public LocationRecord setZipOrPostalcode(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.location.zip_or_postalcode</code>.
	 */
	public String getZipOrPostalcode() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.location.country</code>.
	 */
	public LocationRecord setCountry(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.location.country</code>.
	 */
	public String getCountry() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, String, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, String, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Location.LOCATION.LOCATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Location.LOCATION.CITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Location.LOCATION.STATE_OR_PROVINCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Location.LOCATION.ZIP_OR_POSTALCODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Location.LOCATION.COUNTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getLocationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getStateOrProvince();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getZipOrPostalcode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getCountry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value1(Long value) {
		setLocationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value2(String value) {
		setCity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value3(String value) {
		setStateOrProvince(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value4(String value) {
		setZipOrPostalcode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value5(String value) {
		setCountry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord values(Long value1, String value2, String value3, String value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LocationRecord
	 */
	public LocationRecord() {
		super(Location.LOCATION);
	}

	/**
	 * Create a detached, initialised LocationRecord
	 */
	public LocationRecord(Long locationId, String city, String stateOrProvince, String zipOrPostalcode, String country) {
		super(Location.LOCATION);

		setValue(0, locationId);
		setValue(1, city);
		setValue(2, stateOrProvince);
		setValue(3, zipOrPostalcode);
		setValue(4, country);
	}
}
