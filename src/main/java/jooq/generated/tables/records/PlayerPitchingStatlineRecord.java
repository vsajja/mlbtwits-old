/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;


import javax.annotation.Generated;

import jooq.generated.tables.PlayerPitchingStatline;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerPitchingStatlineRecord extends UpdatableRecordImpl<PlayerPitchingStatlineRecord> {

	private static final long serialVersionUID = 1128177579;

	/**
	 * Setter for <code>public.player_pitching_statline.pitching_statline_id</code>.
	 */
	public PlayerPitchingStatlineRecord setPitchingStatlineId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.pitching_statline_id</code>.
	 */
	public Integer getPitchingStatlineId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.year</code>.
	 */
	public PlayerPitchingStatlineRecord setYear(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.year</code>.
	 */
	public Integer getYear() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.team_id</code>.
	 */
	public PlayerPitchingStatlineRecord setTeamId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.team_id</code>.
	 */
	public Integer getTeamId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.wins</code>.
	 */
	public PlayerPitchingStatlineRecord setWins(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.wins</code>.
	 */
	public Integer getWins() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.losses</code>.
	 */
	public PlayerPitchingStatlineRecord setLosses(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.losses</code>.
	 */
	public Integer getLosses() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.era</code>.
	 */
	public PlayerPitchingStatlineRecord setEra(Double value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.era</code>.
	 */
	public Double getEra() {
		return (Double) getValue(5);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.games</code>.
	 */
	public PlayerPitchingStatlineRecord setGames(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.games</code>.
	 */
	public Integer getGames() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.games_started</code>.
	 */
	public PlayerPitchingStatlineRecord setGamesStarted(Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.games_started</code>.
	 */
	public Integer getGamesStarted() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.complete_games</code>.
	 */
	public PlayerPitchingStatlineRecord setCompleteGames(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.complete_games</code>.
	 */
	public Integer getCompleteGames() {
		return (Integer) getValue(8);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.shutouts</code>.
	 */
	public PlayerPitchingStatlineRecord setShutouts(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.shutouts</code>.
	 */
	public Integer getShutouts() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.saves</code>.
	 */
	public PlayerPitchingStatlineRecord setSaves(Integer value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.saves</code>.
	 */
	public Integer getSaves() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.save_opps</code>.
	 */
	public PlayerPitchingStatlineRecord setSaveOpps(Integer value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.save_opps</code>.
	 */
	public Integer getSaveOpps() {
		return (Integer) getValue(11);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.innings</code>.
	 */
	public PlayerPitchingStatlineRecord setInnings(Double value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.innings</code>.
	 */
	public Double getInnings() {
		return (Double) getValue(12);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.hits</code>.
	 */
	public PlayerPitchingStatlineRecord setHits(Integer value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.hits</code>.
	 */
	public Integer getHits() {
		return (Integer) getValue(13);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.runs</code>.
	 */
	public PlayerPitchingStatlineRecord setRuns(Integer value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.runs</code>.
	 */
	public Integer getRuns() {
		return (Integer) getValue(14);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.earned_runs</code>.
	 */
	public PlayerPitchingStatlineRecord setEarnedRuns(Integer value) {
		setValue(15, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.earned_runs</code>.
	 */
	public Integer getEarnedRuns() {
		return (Integer) getValue(15);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.home_runs</code>.
	 */
	public PlayerPitchingStatlineRecord setHomeRuns(Integer value) {
		setValue(16, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.home_runs</code>.
	 */
	public Integer getHomeRuns() {
		return (Integer) getValue(16);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.hit_batsmen</code>.
	 */
	public PlayerPitchingStatlineRecord setHitBatsmen(Integer value) {
		setValue(17, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.hit_batsmen</code>.
	 */
	public Integer getHitBatsmen() {
		return (Integer) getValue(17);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.walks</code>.
	 */
	public PlayerPitchingStatlineRecord setWalks(Integer value) {
		setValue(18, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.walks</code>.
	 */
	public Integer getWalks() {
		return (Integer) getValue(18);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.intentional_walks</code>.
	 */
	public PlayerPitchingStatlineRecord setIntentionalWalks(Integer value) {
		setValue(19, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.intentional_walks</code>.
	 */
	public Integer getIntentionalWalks() {
		return (Integer) getValue(19);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.strike_outs</code>.
	 */
	public PlayerPitchingStatlineRecord setStrikeOuts(Integer value) {
		setValue(20, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.strike_outs</code>.
	 */
	public Integer getStrikeOuts() {
		return (Integer) getValue(20);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.average</code>.
	 */
	public PlayerPitchingStatlineRecord setAverage(Double value) {
		setValue(21, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.average</code>.
	 */
	public Double getAverage() {
		return (Double) getValue(21);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.whip</code>.
	 */
	public PlayerPitchingStatlineRecord setWhip(Double value) {
		setValue(22, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.whip</code>.
	 */
	public Double getWhip() {
		return (Double) getValue(22);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.player_id</code>.
	 */
	public PlayerPitchingStatlineRecord setPlayerId(Integer value) {
		setValue(23, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.player_id</code>.
	 */
	public Integer getPlayerId() {
		return (Integer) getValue(23);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.bb9</code>.
	 */
	public PlayerPitchingStatlineRecord setBb9(Double value) {
		setValue(24, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.bb9</code>.
	 */
	public Double getBb9() {
		return (Double) getValue(24);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.babip</code>.
	 */
	public PlayerPitchingStatlineRecord setBabip(Double value) {
		setValue(25, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.babip</code>.
	 */
	public Double getBabip() {
		return (Double) getValue(25);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.hr9</code>.
	 */
	public PlayerPitchingStatlineRecord setHr9(Double value) {
		setValue(26, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.hr9</code>.
	 */
	public Double getHr9() {
		return (Double) getValue(26);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.gidp_opp</code>.
	 */
	public PlayerPitchingStatlineRecord setGidpOpp(Integer value) {
		setValue(27, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.gidp_opp</code>.
	 */
	public Integer getGidpOpp() {
		return (Integer) getValue(27);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.obp</code>.
	 */
	public PlayerPitchingStatlineRecord setObp(Double value) {
		setValue(28, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.obp</code>.
	 */
	public Double getObp() {
		return (Double) getValue(28);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.ops</code>.
	 */
	public PlayerPitchingStatlineRecord setOps(Double value) {
		setValue(29, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.ops</code>.
	 */
	public Double getOps() {
		return (Double) getValue(29);
	}

	/**
	 * Setter for <code>public.player_pitching_statline.slg</code>.
	 */
	public PlayerPitchingStatlineRecord setSlg(Double value) {
		setValue(30, value);
		return this;
	}

	/**
	 * Getter for <code>public.player_pitching_statline.slg</code>.
	 */
	public Double getSlg() {
		return (Double) getValue(30);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PlayerPitchingStatlineRecord
	 */
	public PlayerPitchingStatlineRecord() {
		super(PlayerPitchingStatline.PLAYER_PITCHING_STATLINE);
	}

	/**
	 * Create a detached, initialised PlayerPitchingStatlineRecord
	 */
	public PlayerPitchingStatlineRecord(Integer pitchingStatlineId, Integer year, Integer teamId, Integer wins, Integer losses, Double era, Integer games, Integer gamesStarted, Integer completeGames, Integer shutouts, Integer saves, Integer saveOpps, Double innings, Integer hits, Integer runs, Integer earnedRuns, Integer homeRuns, Integer hitBatsmen, Integer walks, Integer intentionalWalks, Integer strikeOuts, Double average, Double whip, Integer playerId, Double bb9, Double babip, Double hr9, Integer gidpOpp, Double obp, Double ops, Double slg) {
		super(PlayerPitchingStatline.PLAYER_PITCHING_STATLINE);

		setValue(0, pitchingStatlineId);
		setValue(1, year);
		setValue(2, teamId);
		setValue(3, wins);
		setValue(4, losses);
		setValue(5, era);
		setValue(6, games);
		setValue(7, gamesStarted);
		setValue(8, completeGames);
		setValue(9, shutouts);
		setValue(10, saves);
		setValue(11, saveOpps);
		setValue(12, innings);
		setValue(13, hits);
		setValue(14, runs);
		setValue(15, earnedRuns);
		setValue(16, homeRuns);
		setValue(17, hitBatsmen);
		setValue(18, walks);
		setValue(19, intentionalWalks);
		setValue(20, strikeOuts);
		setValue(21, average);
		setValue(22, whip);
		setValue(23, playerId);
		setValue(24, bb9);
		setValue(25, babip);
		setValue(26, hr9);
		setValue(27, gidpOpp);
		setValue(28, obp);
		setValue(29, ops);
		setValue(30, slg);
	}
}
