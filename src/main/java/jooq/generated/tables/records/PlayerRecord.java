/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;


import javax.annotation.Generated;

import jooq.generated.tables.Player;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record4<Integer, String, String, Integer> {

	private static final long serialVersionUID = 1702188994;

	/**
	 * Setter for <code>public.player.player_id</code>.
	 */
	public PlayerRecord setPlayerId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.player.player_id</code>.
	 */
	public Integer getPlayerId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.player.name</code>.
	 */
	public PlayerRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.player.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.player.name_plain</code>.
	 */
	public PlayerRecord setNamePlain(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.player.name_plain</code>.
	 */
	public String getNamePlain() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.player.team_id</code>.
	 */
	public PlayerRecord setTeamId(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.player.team_id</code>.
	 */
	public Integer getTeamId() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Player.PLAYER.PLAYER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Player.PLAYER.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Player.PLAYER.NAME_PLAIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Player.PLAYER.TEAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getPlayerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getNamePlain();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getTeamId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value1(Integer value) {
		setPlayerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value3(String value) {
		setNamePlain(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value4(Integer value) {
		setTeamId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord values(Integer value1, String value2, String value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PlayerRecord
	 */
	public PlayerRecord() {
		super(Player.PLAYER);
	}

	/**
	 * Create a detached, initialised PlayerRecord
	 */
	public PlayerRecord(Integer playerId, String name, String namePlain, Integer teamId) {
		super(Player.PLAYER);

		setValue(0, playerId);
		setValue(1, name);
		setValue(2, namePlain);
		setValue(3, teamId);
	}
}
