/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.generated.tables.Tweet;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TweetRecord extends TableRecordImpl<TweetRecord> implements Record3<Integer, String, Timestamp> {

	private static final long serialVersionUID = -160105538;

	/**
	 * Setter for <code>public.tweet.tweet_id</code>.
	 */
	public TweetRecord setTweetId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.tweet.tweet_id</code>.
	 */
	public Integer getTweetId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.tweet.tweet</code>.
	 */
	public TweetRecord setTweet(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.tweet.tweet</code>.
	 */
	public String getTweet() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.tweet.created_timestamp</code>.
	 */
	public TweetRecord setCreatedTimestamp(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.tweet.created_timestamp</code>.
	 */
	public Timestamp getCreatedTimestamp() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Tweet.TWEET.TWEET_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tweet.TWEET.TWEET_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Tweet.TWEET.CREATED_TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getTweetId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTweet();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getCreatedTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TweetRecord value1(Integer value) {
		setTweetId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TweetRecord value2(String value) {
		setTweet(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TweetRecord value3(Timestamp value) {
		setCreatedTimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TweetRecord values(Integer value1, String value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TweetRecord
	 */
	public TweetRecord() {
		super(Tweet.TWEET);
	}

	/**
	 * Create a detached, initialised TweetRecord
	 */
	public TweetRecord(Integer tweetId, String tweet, Timestamp createdTimestamp) {
		super(Tweet.TWEET);

		setValue(0, tweetId);
		setValue(1, tweet);
		setValue(2, createdTimestamp);
	}
}
